"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
"""
import os
from typing import Dict, Any

class FileUpdater:
    """–û–±–Ω–æ–≤–ª—è—Ç–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    
    def format_relay_line(self, server_info: Dict[str, Any]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Ä–µ–ª–µ—è"""
        if not server_info['ip']:
            return None
        
        name = server_info['name']
        protocol = server_info['protocol']
        ip = server_info['ip']
        
        return f"{name:<30} Anonymized DNS relay | {protocol} | {ip}"
    
    def format_server_line(self, server_info: Dict[str, Any]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –æ–±—ã—á–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        if not server_info['ip']:
            return None
        
        name = server_info['name']
        no_filter = "no filter" if server_info['no_filters'] else "filter"
        no_logs = "no logs" if server_info['no_logs'] else "logs"
        dnssec = "DNSSEC" if server_info['dnssec'] else "-----"
        protocol = server_info['protocol']
        ip = server_info['ip']
        
        return f"{name:<30} {no_filter} | {no_logs} | {dnssec} | IPv4 server | {protocol} | {ip}"
    
    def update_config_file(self, filename: str, servers_data: Dict[str, Any], is_relay_file: bool = False) -> int:
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
        try:
            print(f"üìù –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª {filename}...")
            
            # –ß–∏—Ç–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
            with open(filename, 'r', encoding='utf-8') as f:
                lines = f.readlines()
            
            updated_lines = []
            updated_count = 0
            
            for line in lines:
                original_line = line.rstrip()
                
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, —Å—Ç—Ä–∞–Ω—ã –∏ –≥–æ—Ä–æ–¥–∞
                if (not original_line or original_line.startswith('#') or 
                    (original_line.startswith('[') and original_line.endswith(']')) or
                    (original_line.startswith('"') and original_line.endswith('"'))):
                    updated_lines.append(line)
                    continue
                
                # –ò—â–µ–º –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞ –≤ –¥–∞–Ω–Ω—ã—Ö
                server_name = original_line.split()[0] if original_line.split() else ""
                
                if server_name in servers_data:
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
                    if is_relay_file:
                        new_line = self.format_relay_line(servers_data[server_name])
                    else:
                        new_line = self.format_server_line(servers_data[server_name])
                    
                    if new_line:
                        updated_lines.append(new_line + '\n')
                        updated_count += 1
                        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {server_name} -> {servers_data[server_name]['ip']}")
                    else:
                        updated_lines.append(line)
                else:
                    # –û—Å—Ç–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É
                    updated_lines.append(line)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            output_dir = '/app/output' if os.path.exists('/app') else './output'
            
            try:
                if not os.path.exists(output_dir):
                    os.makedirs(output_dir, mode=0o755, exist_ok=True)
            except PermissionError:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é {output_dir}, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é")
                output_dir = '.'
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            backup_filename = os.path.join(output_dir, f"{os.path.basename(filename)}.original_backup")
            try:
                with open(backup_filename, 'w', encoding='utf-8') as f:
                    f.writelines(lines)
                print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_filename}")
            except PermissionError:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ—ë")
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            output_filename = os.path.join(output_dir, os.path.basename(filename))
            try:
                with open(output_filename, 'w', encoding='utf-8') as f:
                    f.writelines(updated_lines)
                print(f"‚úÖ –§–∞–π–ª {output_filename} –æ–±–Ω–æ–≤–ª–µ–Ω. –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {updated_count}")
            except PermissionError:
                # –ü—Ä–æ–±—É–µ–º –∑–∞–ø–∏—Å–∞—Ç—å –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
                alt_filename = f"./{os.path.basename(filename)}"
                try:
                    with open(alt_filename, 'w', encoding='utf-8') as f:
                        f.writelines(updated_lines)
                    print(f"‚úÖ –§–∞–π–ª {alt_filename} –æ–±–Ω–æ–≤–ª–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {updated_count}")
                except Exception as e:
                    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: {e}")
                    return 0
            
            return updated_count
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filename}: {e}")
            return 0