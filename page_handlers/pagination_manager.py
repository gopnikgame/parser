"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
"""
import time
import random
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
try:
    from ..core.config import ParserConfig
except ImportError:
    # Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    import sys
    from pathlib import Path
    sys.path.append(str(Path(__file__).parent.parent))
    from core.config import ParserConfig

class PaginationManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
    
    def __init__(self, driver: webdriver.Chrome, config: ParserConfig):
        self.driver = driver
        self.config = config
    
    def setup_pagination(self) -> bool:
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏...")
        
        # –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        strategies = [
            self._try_vuetify3_pagination,
            self._try_vuetify2_pagination,
            self._try_generic_pagination,
            self._try_javascript_pagination
        ]
        
        for strategy in strategies:
            try:
                if strategy():
                    print("‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                    # –ñ–¥–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    time.sleep(5)
                    return True
            except Exception as e:
                print(f"‚ö†Ô∏è –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞: {e}")
                continue
        
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é")
        return False
    
    def _try_vuetify3_pagination(self) -> bool:
        """–ü–æ–ø—ã—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vuetify 3.x –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
        selectors = [
            ".v-data-table__footer .v-select",
            ".v-table__footer .v-select"
        ]
        
        for selector in selectors:
            try:
                dropdown = self.driver.find_element(By.CSS_SELECTOR, selector)
                if dropdown.is_displayed():
                    return self._click_pagination_dropdown(dropdown)
            except:
                continue
        
        return False
    
    def _try_vuetify2_pagination(self) -> bool:
        """–ü–æ–ø—ã—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vuetify 2.x –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
        selectors = [
            ".v-datatable__actions .v-select",
            ".v-data-table-footer .v-select"
        ]
        
        for selector in selectors:
            try:
                dropdown = self.driver.find_element(By.CSS_SELECTOR, selector)
                if dropdown.is_displayed():
                    return self._click_pagination_dropdown(dropdown)
            except:
                continue
        
        return False
    
    def _try_generic_pagination(self) -> bool:
        """–ü–æ–ø—ã—Ç–∫–∞ –æ–±—â–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
        selectors = [
            "select[aria-label*='per page']",
            "select[aria-label*='rows']",
            ".per-page-select",
            ".rows-per-page select"
        ]
        
        for selector in selectors:
            try:
                dropdown = self.driver.find_element(By.CSS_SELECTOR, selector)
                if dropdown.is_displayed():
                    return self._click_pagination_dropdown(dropdown)
            except:
                continue
        
        return False
    
    def _try_javascript_pagination(self) -> bool:
        """JavaScript –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
        try:
            self.driver.execute_script("""
                // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ Vue –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ–ª—å—à–æ–π –ª–∏–º–∏—Ç
                var app = document.querySelector('[data-app]');
                if (app && app.__vue__) {
                    var vm = app.__vue__;
                    if (vm.$data && vm.$data.itemsPerPage) {
                        vm.$data.itemsPerPage = -1;
                    }
                    if (vm.$data && vm.$data.pagination) {
                        vm.$data.pagination.rowsPerPage = -1;
                    }
                }
                
                // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–µ–ª–µ–∫—Ç—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                var selects = document.querySelectorAll('select');
                selects.forEach(function(select) {
                    var options = select.options;
                    for (var i = options.length - 1; i >= 0; i--) {
                        if (options[i].value === '-1' || options[i].text.includes('All')) {
                            select.selectedIndex = i;
                            select.dispatchEvent(new Event('change'));
                            return true;
                        }
                    }
                });
            """)
            return True
        except:
            return False
    
    def _click_pagination_dropdown(self, dropdown) -> bool:
        """–ö–ª–∏–∫ –ø–æ dropdown –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ –≤—ã–±–æ—Ä 'All'"""
        try:
            # –ö–ª–∏–∫–∞–µ–º –Ω–∞ dropdown
            ActionChains(self.driver).move_to_element(dropdown).click().perform()
            time.sleep(2)
            
            # –ò—â–µ–º –æ–ø—Ü–∏—é "All"
            all_options = [
                "//div[contains(@class, 'v-list__tile__title') and (text()='All' or text()='–í—Å–µ' or text()='-1')]",
                "//li[contains(text(), 'All') or contains(text(), '–í—Å–µ')]",
                "//option[contains(text(), 'All') or contains(text(), '–í—Å–µ') or @value='-1']",
                "//div[contains(@class, 'v-list-item__title') and (text()='All' or text()='–í—Å–µ')]"
            ]
            
            for option_xpath in all_options:
                try:
                    option = WebDriverWait(self.driver, 5).until(
                        EC.element_to_be_clickable((By.XPATH, option_xpath))
                    )
                    option.click()
                    return True
                except:
                    continue
            
            return False
            
        except:
            return False
    
    def try_multiple_pagination_strategies(self) -> bool:
        """–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
        try:
            print("üîß –ü–æ–ø—ã—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏...")
            
            # –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: Vuetify –ø–∞–≥–∏–Ω–∞—Ü–∏—è
            for selector in self.config.PAGINATION_SELECTORS:
                try:
                    dropdown = self.driver.find_element(By.CSS_SELECTOR, selector)
                    if dropdown.is_displayed():
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω dropdown –ø–∞–≥–∏–Ω–∞—Ü–∏–∏: {selector}")
                        
                        # –ö–ª–∏–∫–∞–µ–º –Ω–∞ dropdown
                        ActionChains(self.driver).move_to_element(dropdown).click().perform()
                        time.sleep(2)
                        
                        # –ò—â–µ–º –æ–ø—Ü–∏—é "All" –∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                        all_options = [
                            "//div[contains(@class, 'v-list__tile__title') and (text()='All' or text()='–í—Å–µ' or text()='-1')]",
                            "//li[contains(text(), 'All') or contains(text(), '–í—Å–µ')]",
                            "//option[contains(text(), 'All') or contains(text(), '–í—Å–µ') or @value='-1']",
                            "//div[contains(@class, 'v-list-item__title') and (text()='All' or text()='–í—Å–µ')]"
                        ]
                        
                        for option_xpath in all_options:
                            try:
                                option = WebDriverWait(self.driver, 5).until(
                                    EC.element_to_be_clickable((By.XPATH, option_xpath))
                                )
                                option.click()
                                print(f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è 'All'")
                                time.sleep(5)
                                return True
                            except:
                                continue
                        
                        # –ï—Å–ª–∏ "All" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
                        try:
                            max_options = self.driver.find_elements(By.XPATH, "//div[contains(@class, 'v-list__tile__title') and text() > '50']")
                            if max_options:
                                max_option = max(max_options, key=lambda x: int(x.text) if x.text.isdigit() else 0)
                                max_option.click()
                                print(f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ü–∏—è: {max_option.text}")
                                time.sleep(5)
                                return True
                        except:
                            pass
                        
                        # –ó–∞–∫—Ä—ã–≤–∞–µ–º dropdown
                        self.driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ESCAPE)
                        time.sleep(1)
                        
                except Exception as e:
                    continue
            
            # –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ –∫–ª–∏–∫–∞–µ–º "–ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
            try:
                last_page_selectors = [
                    ".v-pagination__navigation--end",
                    ".pagination .last",
                    "[aria-label*='last page']",
                    "[aria-label*='–ø–æ—Å–ª–µ–¥–Ω—è—è']"
                ]
                
                for selector in last_page_selectors:
                    try:
                        last_button = self.driver.find_element(By.CSS_SELECTOR, selector)
                        if last_button.is_displayed() and last_button.is_enabled():
                            last_button.click()
                            print(f"‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
                            time.sleep(5)
                            return True
                    except:
                        continue
            except:
                pass
            
            # –°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: JavaScript –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
            try:
                print("üîß –ü–æ–ø—ã—Ç–∫–∞ JavaScript –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π