#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
echo "üîß –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ DNSCrypt Parser"
echo "======================================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "parser_new.py" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª parser_new.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo "üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
echo "üÜî UID: $(id -u), GID: $(id -g)"

echo ""
echo "üîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –î–ò–†–ï–ö–¢–û–†–ò–ô"
echo "---------------------------------------"

# –°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
REQUIRED_DIRS=(
    "output"
    "output/cache"
    "logs"
    "core"
    "extractors"
    "strategies"
    "utils"
    "file_handlers"
    "github"
    "page_handlers"
    "data_handlers"
)

for dir in "${REQUIRED_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        ls -ld "$dir" 2>/dev/null || echo "  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
    else
        echo "‚ùå $dir - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º..."
        mkdir -p "$dir" 2>/dev/null
        if [ $? -eq 0 ]; then
            echo "  ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir —Å–æ–∑–¥–∞–Ω–∞"
        else
            echo "  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $dir"
        fi
    fi
done

echo ""
echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–ê–í –î–û–°–¢–£–ü–ê"
echo "---------------------------------------"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
echo "üî® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."

# –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
for dir in "${REQUIRED_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        echo "üî® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–ª—è $dir..."
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∞–≤
        chmod 755 "$dir" 2>/dev/null || \
        chmod 777 "$dir" 2>/dev/null || \
        echo "  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–ª—è $dir"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        TEST_FILE="$dir/test_permissions_$(date +%s).tmp"
        if touch "$TEST_FILE" 2>/dev/null; then
            rm "$TEST_FILE" 2>/dev/null
            echo "  ‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è $dir - –û–ö"
        else
            echo "  ‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è $dir"
        fi
    fi
done

echo ""
echo "üêç –ü–†–û–í–ï–†–ö–ê PYTHON –ú–û–î–£–õ–ï–ô"
echo "---------------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
MODULES=(
    "core"
    "core.base_parser"
    "core.config"
    "core.driver_manager"
    "extractors.dialog_extractor"
    "strategies.error_recovery"
    "utils.metrics"
    "file_handlers.config_parser"
    "github.github_manager"
    "page_handlers.page_navigator"
    "data_handlers.server_processor"
)

for module in "${MODULES[@]}"; do
    echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—è $module... "
    if python3 -c "import $module" 2>/dev/null; then
        echo "‚úÖ"
    else
        echo "‚ùå"
        echo "  –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏:"
        python3 -c "import $module" 2>&1 | head -3 | sed 's/^/    /'
    fi
done

echo ""
echo "üíæ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø"
echo "---------------------------------------"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –∫—ç—à–∞
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∫—ç—à–∞..."

python3 << 'EOF'
import sys
import os
sys.path.append('.')

try:
    from utils.metrics import ParsingCache
    print("‚úÖ –ò–º–ø–æ—Ä—Ç ParsingCache —É—Å–ø–µ—à–µ–Ω")
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∫—ç—à
    cache = ParsingCache()
    print(f"‚úÖ –ö—ç—à —Å–æ–∑–¥–∞–Ω, —Å—Ç–∞—Ç—É—Å: {cache.cache_enabled}")
    
    if cache.cache_enabled:
        print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫—ç—à–∞: {cache.cache_dir}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
        test_data = {"test": "data", "ip": "1.2.3.4"}
        cache.cache_server_info("test_server", test_data)
        
        retrieved = cache.get_cached_server_info("test_server")
        if retrieved:
            print("‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –∏–∑ –∫—ç—à–∞")
    else:
        print("‚ö†Ô∏è –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—ç—à–∞: {e}")
    import traceback
    traceback.print_exc()
EOF

echo ""
echo "üìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ï–¢–†–ò–ö"
echo "---------------------------------------"

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–µ—Ç—Ä–∏–∫..."

python3 << 'EOF'
import sys
sys.path.append('.')

try:
    from utils.metrics import ParsingMetrics
    print("‚úÖ –ò–º–ø–æ—Ä—Ç ParsingMetrics —É—Å–ø–µ—à–µ–Ω")
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –º–µ—Ç—Ä–∏–∫
    metrics = ParsingMetrics()
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–µ—Ç—Ä–∏–∫ —Å–æ–∑–¥–∞–Ω–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    session_id = metrics.start_session("test_session")
    print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {session_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –º–µ—Ç—Ä–∏–∫—É
    metrics.record_server_extraction("test_server", True, 1.5, 1, None, "test_method")
    print("‚úÖ –ú–µ—Ç—Ä–∏–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞")
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
    session = metrics.end_session()
    if session:
        print("‚úÖ –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Å–µ—Å—Å–∏–∏")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {e}")
    import traceback
    traceback.print_exc()
EOF

echo ""
echo "üèóÔ∏è –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–°–ù–û–í–ù–û–ì–û –ü–ê–†–°–ï–†–ê"
echo "---------------------------------------"

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ DNSCryptParser..."

python3 << 'EOF'
import sys
sys.path.append('.')

try:
    from core.base_parser import DNSCryptParser
    print("‚úÖ –ò–º–ø–æ—Ä—Ç DNSCryptParser —É—Å–ø–µ—à–µ–Ω")
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä—Å–µ—Ä (–±–µ–∑ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
    parser = DNSCryptParser()
    print("‚úÖ DNSCryptParser —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    if parser.metrics:
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–µ—Ç—Ä–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    else:
        print("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –º–µ—Ç—Ä–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    if parser.cache:
        print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ (–∞–∫—Ç–∏–≤–Ω–∞: {parser.cache.cache_enabled})")
    else:
        print("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    print("‚úÖ –ë–∞–∑–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä—Å–µ—Ä–∞: {e}")
    import traceback
    traceback.print_exc()
EOF

echo ""
echo "üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢"
echo "======================================================================="

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
FINAL_CHECK=true

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã
KEY_FILES=(
    "parser_new.py"
    "core/base_parser.py"
    "core/config.py"
    "utils/metrics.py"
)

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:"
for file in "${KEY_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "  ‚úÖ $file"
    else
        echo "  ‚ùå $file - –ù–ï –ù–ê–ô–î–ï–ù!"
        FINAL_CHECK=false
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞
echo ""
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π:"
python3 -c "
import sys
sys.path.append('.')

modules = [
    'core',
    'core.base_parser', 
    'utils.metrics'
]

all_ok = True
for module in modules:
    try:
        __import__(module)
        print(f'  ‚úÖ {module}')
    except Exception as e:
        print(f'  ‚ùå {module} - {e}')
        all_ok = False

if all_ok:
    print('üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ!')
    exit(0)
else:
    print('‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–æ–º –º–æ–¥—É–ª–µ–π')
    exit(1)
"

if [ $? -eq 0 ] && [ "$FINAL_CHECK" = true ]; then
    echo ""
    echo "üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!"
    echo "‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ"
    echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ)"
    echo "‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã"
    echo ""
    echo "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–µ—Ä:"
    echo "   python parser_new.py"
    echo ""
else
    echo ""
    echo "‚ö†Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –° –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø–ú–ò"
    echo "‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è"
    echo ""
    echo "üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º"
    echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
    echo "3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–∞–≤–∞–º–∏ root"
    echo ""
fi

echo "======================================================================="