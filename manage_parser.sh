#!/bin/bash

# –ê—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –∏–º–µ–Ω–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞)
INSTANCE_NAME="${1:-}"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–µ–ø–µ—Ä—å —Å–∫—Ä–∏–ø—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ)
ROOT_DIR="$(dirname "$(readlink -f "$0")")"
cd "$ROOT_DIR" || { echo "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞"; exit 1; }

# –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º
set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[0;37m'
NC='\033[0m' # No Color

# –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞
DEFAULT_PARSER_NAME="dnscrypt-parser"
SCHEDULER_CONTAINER_NAME="dnscrypt-parser-scheduler"
MANUAL_CONTAINER_NAME="dnscrypt-parser-once"

if [ -n "$INSTANCE_NAME" ]; then
    PARSER_NAME="${DEFAULT_PARSER_NAME}_${INSTANCE_NAME}"
    SCHEDULER_CONTAINER_NAME="${SCHEDULER_CONTAINER_NAME}_${INSTANCE_NAME}"
    MANUAL_CONTAINER_NAME="${MANUAL_CONTAINER_NAME}_${INSTANCE_NAME}"
else
    PARSER_NAME="${DEFAULT_PARSER_NAME}"
fi

# –§–∞–π–ª—ã –ª–æ–≥–æ–≤
LOGS_DIR="$ROOT_DIR/logs"
OUTPUT_DIR="$ROOT_DIR/output"
mkdir -p "$LOGS_DIR" "$OUTPUT_DIR"
PARSER_LOG_FILE="$LOGS_DIR/parser.log"
ERROR_LOG_FILE="$LOGS_DIR/error.log"
SCHEDULER_LOG_FILE="$OUTPUT_DIR/scheduler.log"

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD HH:MM:SS (UTC)
CURRENT_TIME=$(date -u +%Y-%m-%d\ %H:%M:%S)

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏–Ω —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CURRENT_USER=$(whoami)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Docker
DOCKER_UID=$(id -u)
DOCKER_GID=$(id -g)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level=$1
    local message=$2
    echo -e "${!level}${message}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
check_fix_docker() {
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Docker —á–µ—Ä–µ–∑ snap
    if command -v snap &> /dev/null && snap list 2>/dev/null | grep -q docker; then
        log "YELLOW" "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω Docker, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —á–µ—Ä–µ–∑ snap. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é."
        
        read -r -p "–£–¥–∞–ª–∏—Ç—å Docker (snap) –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é? [Y/n] " response
        response=${response:-Y}
        
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            log "BLUE" "üîÑ –£–¥–∞–ª–µ–Ω–∏–µ Docker, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —á–µ—Ä–µ–∑ snap..."
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º Docker
            log "YELLOW" "‚ö†Ô∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
            docker ps -q | xargs -r docker stop || true
            
            # –£–¥–∞–ª—è–µ–º Docker —á–µ—Ä–µ–∑ snap
            sudo snap remove docker || {
                log "RED" "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å Docker —á–µ—Ä–µ–∑ snap"
                return 1
            }
            
            log "GREEN" "‚úÖ Docker (snap) —É–¥–∞–ª–µ–Ω"
            
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Docker
            log "BLUE" "‚¨áÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Docker..."
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–∞—Ö
            sudo apt-get update
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            sudo apt-get install -y ca-certificates curl gnupg || {
                log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
                return 1
            }
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–ª—é—á–µ–π
            sudo install -m 0755 -d /etc/apt/keyrings
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª—é—á Docker –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ keyring
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–∞—Ö –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            sudo apt-get update
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Engine, containerd –∏ Docker Compose
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-compose || {
                log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Docker"
                return 1
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
            sudo usermod -aG docker "$CURRENT_USER"
            
            log "GREEN" "‚úÖ Docker —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            log "YELLOW" "‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
            if command -v docker &> /dev/null; then
                docker --version
                docker-compose --version
                log "GREEN" "‚úÖ Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
            else
                log "RED" "‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π Docker"
                return 1
            fi
            
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
            read -r -p "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö —Ç—Ä–µ–±—É—é—Ç –ø–µ—Ä–µ–∑–∞—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É. –í—ã–π—Ç–∏ —Å–µ–π—á–∞—Å? [y/N] " response
            response=${response:-N}
            
            if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                log "YELLOW" "‚ö†Ô∏è –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –ü–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
                exit 0
            fi
        else
            log "YELLOW" "‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å Docker, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —á–µ—Ä–µ–∑ snap. –í–æ–∑–º–æ–∂–Ω—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è."
        fi
    else
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
        if ! command -v docker &> /dev/null; then
            log "YELLOW" "‚ö†Ô∏è Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞."
            
            read -r -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Docker? [Y/n] " response
            response=${response:-Y}
            
            if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                log "BLUE" "‚¨áÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Docker..."
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–∞—Ö
                sudo apt-get update
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
                sudo apt-get install -y ca-certificates curl gnupg || {
                    log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
                    return 1
                }
                
                # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–ª—é—á–µ–π
                sudo install -m 0755 -d /etc/apt/keyrings
                
                # –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª—é—á Docker –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ keyring
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                sudo chmod a+r /etc/apt/keyrings/docker.gpg
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
                DIST=$(lsb_release -cs)
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
                echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $DIST stable" | \
                    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–∞—Ö –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
                sudo apt-get update
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Engine, containerd –∏ Docker Compose
                sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-compose || {
                    log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Docker"
                    return 1
                }
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
                sudo usermod -aG docker "$CURRENT_USER"
                
                log "GREEN" "‚úÖ Docker —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                log "YELLOW" "‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
                if command -v docker &> /dev/null; then
                    docker --version
                    docker-compose --version
                    log "GREEN" "‚úÖ Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
                else
                    log "RED" "‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π Docker"
                    return 1
                fi
                
                # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                read -r -p "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö —Ç—Ä–µ–±—É—é—Ç –ø–µ—Ä–µ–∑–∞—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É. –í—ã–π—Ç–∏ —Å–µ–π—á–∞—Å? [y/N] " response
                response=${response:-N}
                
                if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                    log "YELLOW" "‚ö†Ô∏è –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –ü–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
                    exit 0
                fi
            else
                log "RED" "‚ùå Docker —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
                return 1
            fi
        else
            log "GREEN" "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker"
            docker --version
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
            if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
                log "YELLOW" "‚ö†Ô∏è Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                
                read -r -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose? [Y/n] " response
                response=${response:-Y}
                
                if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                    log "BLUE" "‚¨áÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
                    sudo apt-get update
                    sudo apt-get install -y docker-compose || {
                        log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Docker Compose"
                        return 1
                    }
                    log "GREEN" "‚úÖ Docker Compose —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                    docker-compose --version
                fi
            else
                log "GREEN" "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                if command -v docker-compose &> /dev/null; then
                    docker-compose --version
                else
                    docker compose version
                fi
            fi
        fi
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ docker-compose
docker_compose_cmd() {
    if command -v docker-compose &> /dev/null; then
        docker-compose "$@"
    elif command -v docker &> /dev/null && docker compose version &> /dev/null; then
        docker compose "$@"
    else
        log "RED" "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω docker-compose –∏–ª–∏ docker compose"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–æ–º
manage_env_file() {
    local env_file="$ROOT_DIR/.env"
    local env_example="$ROOT_DIR/.env.example"
    local created=false

    log "BLUE" "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π .env..."

    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    log "BLUE" "üìç –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $ROOT_DIR"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if [ ! -f "$env_file" ]; then
        if [ -f "$env_example" ]; then
            cp "$env_example" "$env_file"
            created=true
            log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        else
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env"
            cat > "$env_file" << EOL
# GitHub –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
GITHUB_TOKEN=your_github_token_here
GITHUB_OWNER=gopnikgame
GITHUB_REPO=Installer_dnscypt
GITHUB_BRANCH=main

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
CHROME_HEADLESS=true
CHROME_NO_SANDBOX=true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Scheduler (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
SCHEDULER_INTERVAL_DAYS=7
SCHEDULER_DEBUG=false
EOL
            created=true
            log "YELLOW" "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ GitHub —Ç–æ–∫–µ–Ω!"
        fi
    fi

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª
    read -r -p "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª —Å–µ–π—á–∞—Å? [Y/n] " response
    response=${response:-Y}
    if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
        # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        if command -v nano &> /dev/null; then
            log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º nano..."
            nano "$env_file"
            editor_result=$?
        else
            log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º vi..."
            vi "$env_file"
            editor_result=$?
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        if [ "$editor_result" -ne 0 ]; then
            log "RED" "‚ùå –†–µ–¥–∞–∫—Ç–æ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ –æ—à–∏–±–∫–∏: $editor_result"
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞."
            return 1
        fi
    else
        log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞."
        return 1
    fi

    log "GREEN" "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
update_repo() {
    log "BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π STASHED
    STASHED="false"

    # Stash local changes to .env
    if ! git diff --quiet HEAD -- .env 2>/dev/null; then
        log "BLUE" "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ .env"
        git stash push -m "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ .env –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º" -- .env
        STASHED="true"
    else
        log "BLUE" "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ .env –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"
    fi

    git fetch
    git reset --hard origin/main
    log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"

    # Restore stashed changes to .env
    if [[ "$STASHED" == "true" ]]; then
        log "BLUE" "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π .env"
        git stash pop
        if [ $? -ne 0 ]; then
            log "YELLOW" "‚ö†Ô∏è –í–æ–∑–Ω–∏–∫–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ .env. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é."
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ scheduler'–∞
start_scheduler() {
    log "BLUE" "‚è∞ –ó–∞–ø—É—Å–∫ scheduler'–∞ DNSCrypt..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker
    check_fix_docker || {
        log "RED" "‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        return 1
    }
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
    if [ -f ".env" ]; then
        log "BLUE" "üîë –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env"
        export $(grep -v '^#' .env | xargs)
    else
        log "RED" "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è."
        return 1
    fi

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π scheduler, –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
    if docker ps | grep -q "$SCHEDULER_CONTAINER_NAME"; then
        log "YELLOW" "‚ö†Ô∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π scheduler..."
        docker_compose_cmd down
    fi

    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è docker-compose
    export DOCKER_UID DOCKER_GID
    export CREATED_BY="$CURRENT_USER"
    export CREATED_AT="$CURRENT_TIME"

    # –ó–∞–ø—É—Å–∫–∞–µ–º scheduler –≤ —Ñ–æ–Ω–µ
    log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫ scheduler'–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
    docker_compose_cmd up -d

    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 3
    if docker ps | grep -q "$SCHEDULER_CONTAINER_NAME"; then
        log "GREEN" "‚úÖ Scheduler –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        log "BLUE" "üìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: docker logs -f $SCHEDULER_CONTAINER_NAME"
        log "BLUE" "üìÅ –õ–æ–≥–∏ scheduler'–∞: $SCHEDULER_LOG_FILE"
    else
        log "RED" "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ scheduler'–∞"
        log "BLUE" "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker logs $SCHEDULER_CONTAINER_NAME"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ scheduler'–∞
stop_scheduler() {
    log "BLUE" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ scheduler'–∞ DNSCrypt..."
    
    if docker ps | grep -q "$SCHEDULER_CONTAINER_NAME"; then
        docker_compose_cmd down
        log "GREEN" "‚úÖ Scheduler –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log "YELLOW" "‚ö†Ô∏è Scheduler –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ scheduler'–∞
view_scheduler_status() {
    log "BLUE" "üìä –°—Ç–∞—Ç—É—Å scheduler'–∞ DNSCrypt..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if docker ps | grep -q "$SCHEDULER_CONTAINER_NAME"; then
        log "GREEN" "‚úÖ Scheduler –∑–∞–ø—É—â–µ–Ω"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        docker ps --filter "name=$SCHEDULER_CONTAINER_NAME" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–æ–≤ scheduler'–∞
        echo ""
        log "BLUE" "üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ —Ñ–∞–π–ª–æ–≤ scheduler'–∞:"
        
        # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
        if [ -f "$OUTPUT_DIR/last_run.txt" ]; then
            last_run=$(cat "$OUTPUT_DIR/last_run.txt" 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            log "GREEN" "üïê –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞: $last_run"
        else
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        
        # –û—Ç—á–µ—Ç scheduler'–∞
        if [ -f "$OUTPUT_DIR/scheduler_report.txt" ]; then
            log "GREEN" "üìä –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç scheduler'–∞:"
            cat "$OUTPUT_DIR/scheduler_report.txt"
        else
            log "YELLOW" "‚ö†Ô∏è –û—Ç—á–µ—Ç scheduler'–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
        echo ""
        read -r -p "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ scheduler'–∞? [Y/n] " response
        response=${response:-Y}
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            if [ -f "$SCHEDULER_LOG_FILE" ]; then
                log "BLUE" "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ scheduler'–∞:"
                tail -20 "$SCHEDULER_LOG_FILE"
            else
                log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª –ª–æ–≥–æ–≤ scheduler'–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
            fi
        fi
        
    elif docker ps -a | grep -q "$SCHEDULER_CONTAINER_NAME"; then
        log "YELLOW" "‚ö†Ô∏è Scheduler –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        docker ps -a --filter "name=$SCHEDULER_CONTAINER_NAME" --format "table {{.Names}}\t{{.Status}}"
        
        log "BLUE" "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ scheduler'–∞:"
        docker logs --tail 10 "$SCHEDULER_CONTAINER_NAME" 2>/dev/null || log "RED" "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏"
    else
        log "RED" "‚ùå Scheduler –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
manage_container() {
    local action=$1

    log "BLUE" "üê≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º –ø–∞—Ä—Å–µ—Ä–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker
    check_fix_docker || {
        log "RED" "‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        return 1
    }
    
    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    log "BLUE" "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose.yml: $(ls -la | grep docker-compose.yml || echo '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')"

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
    if [ -f ".env" ]; then
        log "BLUE" "üîë –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env"
        export $(grep -v '^#' .env | xargs)
    else
        log "RED" "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è."
        return 1
    fi

    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è docker-compose
    export DOCKER_UID DOCKER_GID
    export CREATED_BY="$CURRENT_USER"
    export CREATED_AT="$CURRENT_TIME"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose —Ñ–∞–π–ª–∞
    if [ ! -f "docker-compose.yml" ]; then
        log "RED" "‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!"
        log "BLUE" "üîç –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
        ls -la
        return 1
    fi

    case $action in
        "restart_scheduler")
            log "BLUE" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ scheduler'–∞..."
            docker_compose_cmd down --remove-orphans
            docker_compose_cmd build --no-cache
            docker_compose_cmd up -d
            ;;
        "stop")
            log "BLUE" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
            docker_compose_cmd down --remove-orphans
            ;;
        "start_scheduler")
            start_scheduler
            ;;
        "run_once")
            log "BLUE" "üîç –û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞..."
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º scheduler –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
            if docker ps | grep -q "$SCHEDULER_CONTAINER_NAME"; then
                log "YELLOW" "‚ö†Ô∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º scheduler –¥–ª—è –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞..."
                docker_compose_cmd down
            fi
            docker_compose_cmd build
            docker_compose_cmd --profile manual run --rm dnscrypt-parser-once
            ;;
    esac

    if [ "$action" = "start_scheduler" ] || [ "$action" = "restart_scheduler" ]; then
        log "GREEN" "‚úÖ Scheduler –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ"
        log "BLUE" "üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª–µ: $SCHEDULER_LOG_FILE"
    elif [ "$action" = "run_once" ]; then
        log "GREEN" "‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É"
        log "BLUE" "üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ output/"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
force_remove_container() {
    local container_name=$1
    if docker ps -a | grep -q "$container_name"; then
        log "YELLOW" "‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $container_name..."
        docker stop "$container_name" || true
        docker rm "$container_name" || true
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞
view_results() {
    log "BLUE" "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞..."
    
    if [ -d "$OUTPUT_DIR" ]; then
        log "GREEN" "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ output:"
        ls -la "$OUTPUT_DIR"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç—á–µ—Ç–∞ –ø–∞—Ä—Å–µ—Ä–∞
        if [ -f "$OUTPUT_DIR/update_report.txt" ]; then
            log "BLUE" "üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –æ –ø–∞—Ä—Å–∏–Ω–≥–µ? [Y/n]"
            read -r response
            response=${response:-Y}
            if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                less "$OUTPUT_DIR/update_report.txt" || cat "$OUTPUT_DIR/update_report.txt"
            fi
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç—á–µ—Ç–∞ scheduler'–∞
        if [ -f "$OUTPUT_DIR/scheduler_report.txt" ]; then
            echo ""
            log "BLUE" "üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç scheduler'–∞? [Y/n]"
            read -r response
            response=${response:-Y}
            if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                cat "$OUTPUT_DIR/scheduler_report.txt"
            fi
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        echo ""
        if [ -f "$OUTPUT_DIR/DNSCrypt_relay.txt" ] || [ -f "$OUTPUT_DIR/DNSCrypt_servers.txt" ]; then
            log "GREEN" "‚úÖ –ù–∞–π–¥–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
            if [ -f "$OUTPUT_DIR/DNSCrypt_relay.txt" ]; then
                log "GREEN" "üìÑ DNSCrypt_relay.txt: $(wc -l < "$OUTPUT_DIR/DNSCrypt_relay.txt") —Å—Ç—Ä–æ–∫"
            fi
            if [ -f "$OUTPUT_DIR/DNSCrypt_servers.txt" ]; then
                log "GREEN" "üìÑ DNSCrypt_servers.txt: $(wc -l < "$OUTPUT_DIR/DNSCrypt_servers.txt") —Å—Ç—Ä–æ–∫"
            fi
        else
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
        if [ -f "$OUTPUT_DIR/last_run.txt" ]; then
            last_run=$(cat "$OUTPUT_DIR/last_run.txt" 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            log "BLUE" "üïê –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞: $last_run"
        fi
    else
        log "RED" "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è output –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
view_logs() {
    log "BLUE" "üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ª–æ–≥–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"
    log "GREEN" "1. üìÑ –õ–æ–≥–∏ –ø–∞—Ä—Å–µ—Ä–∞ (parser.log)"
    log "GREEN" "2. ‚è∞ –õ–æ–≥–∏ scheduler'–∞ (scheduler.log)"
    log "GREEN" "3. ‚ùå –õ–æ–≥–∏ –æ—à–∏–±–æ–∫ (error.log)"
    log "GREEN" "4. üê≥ –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ scheduler'–∞"
    log "GREEN" "5. üìä –í—Å–µ –ª–æ–≥–∏"
    log "GREEN" "0. üîô –ù–∞–∑–∞–¥"
    
    read -r -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-5): " choice
    
    case "$choice" in
        1)
            if [ -f "$PARSER_LOG_FILE" ]; then
                log "MAGENTA" "üìä –õ–æ–≥–∏ –ø–∞—Ä—Å–µ—Ä–∞:"
                less "$PARSER_LOG_FILE" || cat "$PARSER_LOG_FILE"
            else
                log "RED" "‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $PARSER_LOG_FILE"
            fi
            ;;
        2)
            if [ -f "$SCHEDULER_LOG_FILE" ]; then
                log "MAGENTA" "üìä –õ–æ–≥–∏ scheduler'–∞:"
                less "$SCHEDULER_LOG_FILE" || cat "$SCHEDULER_LOG_FILE"
            else
                log "RED" "‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ scheduler'–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $SCHEDULER_LOG_FILE"
            fi
            ;;
        3)
            if [ -f "$ERROR_LOG_FILE" ]; then
                log "MAGENTA" "üìä –õ–æ–≥–∏ –æ—à–∏–±–æ–∫:"
                less "$ERROR_LOG_FILE" || cat "$ERROR_LOG_FILE"
            else
                log "RED" "‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: $ERROR_LOG_FILE"
            fi
            ;;
        4)
            if docker ps | grep -q "$SCHEDULER_CONTAINER_NAME"; then
                log "MAGENTA" "üìä –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ scheduler'–∞:"
                docker logs -f "$SCHEDULER_CONTAINER_NAME"
            else
                log "RED" "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä scheduler'–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            fi
            ;;
        5)
            log "MAGENTA" "üìä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏..."
            echo "==================== –õ–û–ì–ò –ü–ê–†–°–ï–†–ê ===================="
            if [ -f "$PARSER_LOG_FILE" ]; then
                tail -50 "$PARSER_LOG_FILE"
            else
                echo "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            fi
            echo ""
            echo "==================== –õ–û–ì–ò SCHEDULER'–ê ===================="
            if [ -f "$SCHEDULER_LOG_FILE" ]; then
                tail -50 "$SCHEDULER_LOG_FILE"
            else
                echo "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            fi
            echo ""
            echo "==================== –õ–û–ì–ò –û–®–ò–ë–û–ö ===================="
            if [ -f "$ERROR_LOG_FILE" ]; then
                tail -50 "$ERROR_LOG_FILE"
            else
                echo "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            fi
            ;;
        0)
            return 0
            ;;
        *)
            log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä."
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞ scheduler'–∞
reset_scheduler_timer() {
    log "BLUE" "üîÑ –°–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞ scheduler'–∞..."
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
    if [ -f "$OUTPUT_DIR/last_run.txt" ]; then
        rm "$OUTPUT_DIR/last_run.txt"
        log "GREEN" "‚úÖ –§–∞–π–ª –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ —É–¥–∞–ª–µ–Ω"
    else
        log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º scheduler –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
    if docker ps | grep -q "$SCHEDULER_CONTAINER_NAME"; then
        log "BLUE" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ scheduler'–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
        docker_compose_cmd restart
        log "GREEN" "‚úÖ Scheduler –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω - –ø–∞—Ä—Å–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ"
    else
        log "YELLOW" "‚ö†Ô∏è Scheduler –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ –ø–∞—Ä—Å–µ—Ä –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ."
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    log "BLUE" "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    find /tmp -maxdepth 1 -type d -name "tmp.*" -user "$CURRENT_USER" -exec rm -rf {} \; 2>/dev/null || true
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Docker
cleanup_docker() {
    log "BLUE" "üßπ –û—á–∏—Å—Ç–∫–∞ Docker..."
    docker system prune -f
    log "GREEN" "‚úÖ Docker –æ—á–∏—â–µ–Ω (—É–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ —Å–µ—Ç–∏)"

    read -r -p "–û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–∫–∂–µ –≤—Å–µ —Ç–æ–º–∞ Docker? [y/N] " response
    response=${response:-N}
    if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
        docker system prune -af --volumes
        log "GREEN" "‚úÖ Docker –æ—á–∏—â–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é (–≤–∫–ª—é—á–∞—è —Ç–æ–º–∞)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
cleanup_logs() {
    log "BLUE" "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤..."
    
    if [ -d "$LOGS_DIR" ] || [ -f "$SCHEDULER_LOG_FILE" ]; then
        local backup_date=$(date +%Y%m%d-%H%M%S)
        local backup_dir="$ROOT_DIR/logs_backup"
        mkdir -p "$backup_dir"
        
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –≤—Å–µ—Ö –ª–æ–≥–æ–≤
        log "BLUE" "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –ª–æ–≥–æ–≤..."
        tar -czf "$backup_dir/logs_$backup_date.tar.gz" \
            $([ -d "$LOGS_DIR" ] && echo "$LOGS_DIR") \
            $([ -f "$SCHEDULER_LOG_FILE" ] && echo "$SCHEDULER_LOG_FILE") \
            $([ -f "$OUTPUT_DIR/scheduler_report.txt" ] && echo "$OUTPUT_DIR/scheduler_report.txt") \
            2>/dev/null
        
        if [ $? -eq 0 ]; then
            log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤ –ª–æ–≥–æ–≤: logs_$backup_date.tar.gz"
            
            # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
            [ -f "$PARSER_LOG_FILE" ] && echo "" > "$PARSER_LOG_FILE"
            [ -f "$ERROR_LOG_FILE" ] && echo "" > "$ERROR_LOG_FILE"
            [ -f "$SCHEDULER_LOG_FILE" ] && echo "" > "$SCHEDULER_LOG_FILE"
            
            log "GREEN" "‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∞—Ä—Ö–∏–≤—ã (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
            find "$backup_dir" -name "logs_*.tar.gz" -type f -mtime +30 -delete
            log "GREEN" "‚úÖ –°—Ç–∞—Ä—ã–µ –∞—Ä—Ö–∏–≤—ã –ª–æ–≥–æ–≤ —É–¥–∞–ª–µ–Ω—ã"
        else
            log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞ –ª–æ–≥–æ–≤"
        fi
    else
        log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª—ã –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        mkdir -p "$LOGS_DIR"
        touch "$PARSER_LOG_FILE" "$ERROR_LOG_FILE" "$SCHEDULER_LOG_FILE"
        log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω—ã –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ GitHub —Ç–æ–∫–µ–Ω–∞
check_github_token() {
    log "BLUE" "üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub —Ç–æ–∫–µ–Ω–∞..."
    
    if [ -f ".env" ]; then
        export $(grep -v '^#' .env | xargs)
        
        if [ -n "${GITHUB_TOKEN:-}" ] && [ "$GITHUB_TOKEN" != "your_github_token_here" ]; then
            log "GREEN" "‚úÖ GitHub —Ç–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
            if curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/user > /dev/null; then
                log "GREEN" "‚úÖ GitHub —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω"
            else
                log "RED" "‚ùå GitHub —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω"
            fi
        else
            log "YELLOW" "‚ö†Ô∏è GitHub —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
            log "YELLOW" "‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ GitHub"
        fi
    else
        log "RED" "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        log "YELLOW" "üîç DNSCrypt Parser with Scheduler"
        log "YELLOW" "===================================="
        log "GREEN" "1. ‚¨ÜÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        log "GREEN" "2. üìù –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª"
        log "GREEN" "3. üîë –ü—Ä–æ–≤–µ—Ä–∏—Ç—å GitHub —Ç–æ–∫–µ–Ω"
        log "GREEN" "4. ‚è∞ –ó–∞–ø—É—Å—Ç–∏—Ç—å scheduler (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)"
        log "GREEN" "5. ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å scheduler"
        log "GREEN" "6. üìä –°—Ç–∞—Ç—É—Å scheduler'–∞"
        log "GREEN" "7. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ)"
        log "GREEN" "8. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å scheduler"
        log "GREEN" "9. ‚è∞ –°–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä scheduler'–∞"
        log "GREEN" "10. üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
        log "GREEN" "11. üìä –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞"
        log "GREEN" "12. üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏"
        log "GREEN" "13. üê≥ –û—á–∏—Å—Ç–∏—Ç—å Docker"
        log "GREEN" "14. üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker"
        log "GREEN" "0. üö™ –í—ã–π—Ç–∏"

        read -r -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-14): " choice

        case "$choice" in
            1)
                update_repo
                ;;
            2)
                manage_env_file
                ;;
            3)
                check_github_token
                ;;
            4)
                manage_container "start_scheduler"
                ;;
            5)
                stop_scheduler
                ;;
            6)
                view_scheduler_status
                ;;
            7)
                manage_container "run_once"
                ;;
            8)
                manage_container "restart_scheduler"
                ;;
            9)
                reset_scheduler_timer
                ;;
            10)
                view_logs
                ;;
            11)
                view_results
                ;;
            12)
                cleanup_logs
                ;;
            13)
                cleanup_docker
                ;;
            14)
                check_fix_docker
                ;;
            0)
                log "BLUE" "üö™ –í—ã—Ö–æ–¥..."
                break
                ;;
            *)
                log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç 0 –¥–æ 14."
                ;;
        esac
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—É–∑—É –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
        echo ""
        read -r -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        echo ""
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker
if [ "$EUID" -ne 0 ] && ! groups | grep -q docker && ! sudo -n true 2>/dev/null; then
    log "YELLOW" "‚ö†Ô∏è –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —á–ª–µ–Ω—Å—Ç–≤–æ –≤ –≥—Ä—É–ø–ø–µ docker"
    log "YELLOW" "‚ö†Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker –∏ –ø–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
cleanup