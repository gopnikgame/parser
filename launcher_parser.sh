#!/bin/bash

# –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º
set -euo pipefail

# –ê—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –∏–º–µ–Ω–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞)
INSTANCE_NAME="${1:-}"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_OWNER="gopnikgame"
REPO_NAME="parser"
PROJECT_DIR="dnscrypt-parser"

# –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –∏–º—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å –∫ PROJECT_DIR
if [ -n "$INSTANCE_NAME" ]; then
    PROJECT_DIR="${PROJECT_DIR}_${INSTANCE_NAME}"
fi

INSTALL_DIR="/opt/$PROJECT_DIR" # –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
LOG_FILE="/var/log/$PROJECT_DIR.log"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level=$1
    local message=$2
    echo -e "${!level}${message}${NC}" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞
read_token() {
    local token
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
    if [ ! -t 0 ]; then
        log "RED" "‚ùå –°–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ç–æ–∫–µ–Ω."
        return 1
    fi
    
    echo -n "üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à GitHub Personal Access Token (—Å–∏–º–≤–æ–ª—ã –Ω–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è): "
    read -s token
    echo ""  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–æ–≥–æ –≤–≤–æ–¥–∞
    
    if [ -z "$token" ]; then
        log "RED" "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
        return 1
    fi
    
    echo "$token"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ GitHub —Ç–æ–∫–µ–Ω–∞
validate_github_token() {
    local token=$1
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ GitHub —Ç–æ–∫–µ–Ω–∞..."
    
    local response
    local http_code
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GitHub API
    if ! curl -s --connect-timeout 10 https://api.github.com > /dev/null; then
        log "RED" "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ GitHub API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
        return 1
    fi
    
    response=$(curl -s -w "%{http_code}" --connect-timeout 10 \
                    -H "Authorization: token $token" \
                    https://api.github.com/user)
    
    if [ $? -ne 0 ]; then
        log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ GitHub API"
        return 1
    fi
    
    http_code="${response: -3}"
    
    case "$http_code" in
        "200")
            log "GREEN" "‚úÖ GitHub —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω"
            return 0
            ;;
        "401")
            log "RED" "‚ùå GitHub —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è"
            return 1
            ;;
        "403")
            log "RED" "‚ùå –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
            return 1
            ;;
        *)
            log "RED" "‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç GitHub API (HTTP $http_code)"
            return 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
check_repo_access() {
    local token=$1
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é $REPO_OWNER/$REPO_NAME..."
    
    local response
    local http_code
    
    response=$(curl -s -w "%{http_code}" --connect-timeout 10 \
                    -H "Authorization: token $token" \
                    "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME")
    
    if [ $? -ne 0 ]; then
        log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é"
        return 1
    fi
    
    http_code="${response: -3}"
    
    case "$http_code" in
        "200")
            log "GREEN" "‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
            return 0
            ;;
        "404")
            log "RED" "‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞"
            log "YELLOW" "‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º"
            return 1
            ;;
        "403")
            log "RED" "‚ùå –î–æ—Å—Ç—É–ø –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–µ—â–µ–Ω"
            return 1
            ;;
        *)
            log "RED" "‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (HTTP $http_code)"
            return 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
create_env_file() {
    local token=$1
    local env_file="$INSTALL_DIR/.env"
    
    log "BLUE" "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    
    cat > "$env_file" << EOF
# ==========================================
# GitHub –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
# ==========================================

# GitHub Personal Access Token
GITHUB_TOKEN=$token

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
GITHUB_OWNER=gopnikgame
GITHUB_REPO=Installer_dnscypt
GITHUB_BRANCH=main

# ==========================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# ==========================================

# –ó–∞–ø—É—Å–∫ Chrome –≤ headless —Ä–µ–∂–∏–º–µ (–±–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
CHROME_HEADLESS=true

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ sandbox –¥–ª—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
CHROME_NO_SANDBOX=true

# ==========================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Scheduler'–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# ==========================================

# –ò–Ω—Ç–µ—Ä–≤–∞–ª –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –≤ –¥–Ω—è—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 7 –¥–Ω–µ–π)
SCHEDULER_INTERVAL_DAYS=7

# –í–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –ª–æ–≥–æ–≤ scheduler'–∞
SCHEDULER_DEBUG=false
EOF

    chmod 600 "$env_file"  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É —Å —Ç–æ–∫–µ–Ω–æ–º
    log "GREEN" "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å —Ç–æ–∫–µ–Ω–æ–º
clone_repo_with_token() {
    local token=$1
    local temp_dir=$2
    
    log "BLUE" "‚¨áÔ∏è –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å —Ç–æ–∫–µ–Ω–æ–º
    local repo_url="https://$token@github.com/$REPO_OWNER/$REPO_NAME.git"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
    if git clone --progress "$repo_url" "$temp_dir/$PROJECT_DIR" 2>&1; then
        log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
        return 0
    else
        log "RED" "‚ùå –û—à–∏–±–∫–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        log "YELLOW" "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–∫–µ–Ω–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub —Ç–æ–∫–µ–Ω–∞
setup_github_token() {
    local token
    local attempts=0
    local max_attempts=3
    
    echo ""
    log "YELLOW" "‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º GitHub Personal Access Token"
    echo ""
    log "BLUE" "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Ç–æ–∫–µ–Ω–∞:"
    echo "   1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/settings/tokens"
    echo "   2. –ù–∞–∂–º–∏—Ç–µ 'Generate new token (classic)'"
    echo "   3. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: repo, workflow"
    echo "   4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    if [ ! -t 0 ]; then
        log "RED" "‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–µ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ"
        log "YELLOW" "‚ö†Ô∏è –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
        return 1
    fi
    
    while [ $attempts -lt $max_attempts ]; do
        log "BLUE" "üîÑ –ü–æ–ø—ã—Ç–∫–∞ $((attempts + 1)) –∏–∑ $max_attempts"
        
        if ! token=$(read_token); then
            ((attempts++))
            continue
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        local token_preview="${token:0:8}...${token: -8}"
        log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω: $token_preview"
        
        if validate_github_token "$token" && check_repo_access "$token"; then
            log "GREEN" "‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∏–Ω—è—Ç –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
            echo "$token"
            return 0
        fi
        
        ((attempts++))
        if [ $attempts -lt $max_attempts ]; then
            echo ""
            log "YELLOW" "‚ö†Ô∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ ($attempts/$max_attempts)"
            echo ""
        fi
    done
    
    log "RED" "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞"
    log "YELLOW" "‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:"
    echo "   - –¢–æ–∫–µ–Ω —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é"
    echo "   - –¢–æ–∫–µ–Ω –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ 'repo'"
    echo "   - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
check_internet() {
    log "BLUE" "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
    
    if ping -c 1 google.com &> /dev/null || ping -c 1 github.com &> /dev/null; then
        log "GREEN" "‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ"
        return 0
    else
        log "RED" "‚ùå –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
missing_deps=()

if ! command -v git &> /dev/null; then
    missing_deps+=("git")
fi
if ! command -v docker &> /dev/null; then
    missing_deps+=("docker.io")
fi
if ! command -v docker-compose &> /dev/null; then
    missing_deps+=("docker-compose")
fi
if ! command -v nano &> /dev/null; then
    missing_deps+=("nano")
fi
if ! command -v curl &> /dev/null; then
    missing_deps+=("curl")
fi

if [ ${#missing_deps[@]} -gt 0 ]; then
    log "YELLOW" "‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤: ${missing_deps[*]}"
    apt-get update
    apt-get install -y "${missing_deps[@]}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
if ! check_internet; then
    log "RED" "‚ùå –î–ª—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
if [ -d "$INSTALL_DIR" ]; then
    log "BLUE" "üöÄ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $INSTALL_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if [ ! -f "$INSTALL_DIR/.env" ]; then
        log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Ç–æ–∫–µ–Ω–∞"
        
        if github_token=$(setup_github_token); then
            create_env_file "$github_token"
        else
            log "RED" "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub —Ç–æ–∫–µ–Ω"
            exit 1
        fi
    else
        log "GREEN" "‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    cd "$INSTALL_DIR"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å .git
    if [ -d ".git" ]; then
        log "BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
        if [ -f ".env" ]; then
            source .env
            if [ -n "${GITHUB_TOKEN:-}" ]; then
                # –û–±–Ω–æ–≤–ª—è–µ–º remote URL —Å —Ç–æ–∫–µ–Ω–æ–º
                git remote set-url origin "https://$GITHUB_TOKEN@github.com/$REPO_OWNER/$REPO_NAME.git"
                if git pull origin main; then
                    log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
                else
                    log "YELLOW" "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π"
                fi
            fi
        fi
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ manage_parser.sh
    if [ -f "manage_parser.sh" ]; then
        chmod +x manage_parser.sh
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç manage_parser.sh —Å –∏–º–µ–Ω–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–æ–º –¥–ª—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ $PROJECT_DIR..."
        ./manage_parser.sh "$INSTANCE_NAME"
    else
        log "RED" "‚ùå –§–∞–π–ª manage_parser.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $INSTALL_DIR"
        exit 1
    fi
    
else
    log "BLUE" "‚¨áÔ∏è –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ $PROJECT_DIR..."
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º GitHub —Ç–æ–∫–µ–Ω
    log "BLUE" "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º..."
    if ! github_token=$(setup_github_token); then
        log "RED" "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub —Ç–æ–∫–µ–Ω"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    TEMP_DIR=$(mktemp -d)
    log "BLUE" "üìÅ –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TEMP_DIR"
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å —Ç–æ–∫–µ–Ω–æ–º
    if ! clone_repo_with_token "$github_token" "$TEMP_DIR"; then
        log "RED" "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
        rm -rf "$TEMP_DIR"
        exit 1
    fi
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    cd "$TEMP_DIR/$PROJECT_DIR"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p "$INSTALL_DIR"
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    log "BLUE" "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    cp -r . "$INSTALL_DIR"
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    cd "$INSTALL_DIR"
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º
    create_env_file "$github_token"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ manage_parser.sh
    if [ -f "manage_parser.sh" ]; then
        chmod +x manage_parser.sh
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç manage_parser.sh —Å –∏–º–µ–Ω–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–æ–º..."
        ./manage_parser.sh "$INSTANCE_NAME"
    else
        log "RED" "‚ùå –§–∞–π–ª manage_parser.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
        exit 1
    fi
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    rm -rf "$TEMP_DIR"
    log "BLUE" "üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞"
fi

log "GREEN" "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ $PROJECT_DIR –∑–∞–≤–µ—Ä—à–µ–Ω–æ"